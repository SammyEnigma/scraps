path-constant NEEDS_PATH : needs ;

rule clang-defaults ( properties * ) {
    if <toolset>darwin in $(properties) || <toolset>clang in $(properties) {
        local result ;
        result += <cflags>-fdiagnostics-show-note-include-stack ;
        result += <cflags>-fmacro-backtrace-limit=0 ;
        result += <cflags>-fmessage-length=0 ;
        result += <cflags>-fmodules ;
        result += <cflags>-fstrict-aliasing ;
        result += <cflags>-Wbool-conversion ;
        result += <cflags>-Wconditional-uninitialized ;
        result += <cflags>-Wconstant-conversion ;
        result += <cflags>-Wdeprecated-declarations ;
        result += <cflags>-Wduplicate-method-match ;
        result += <cflags>-Wempty-body ;
        result += <cflags>-Wenum-conversion ;
        result += <cflags>-Werror=deprecated-objc-isa-usage ;
        result += <cflags>-Werror=objc-root-class ;
        result += <cflags>-Werror=return-type ;
        result += <cflags>-Wint-conversion ;
        result += <cflags>-Winvalid-offsetof ;
        result += <cflags>-Wno-arc-repeated-use-of-weak ;
        result += <cflags>-Wno-c++11-extensions ;
        result += <cflags>-Wno-c++1y-extensions ;
        result += <cflags>-Wno-conversion ;
        result += <cflags>-Wno-deprecated-declarations ;
        result += <cflags>-Wno-deprecated-implementations ;
        result += <cflags>-Wno-exit-time-destructors ;
        result += <cflags>-Wno-four-char-constants ;
        result += <cflags>-Wno-implicit-atomic-properties ;
        result += <cflags>-Wno-missing-braces ;
        result += <cflags>-Wno-missing-field-initializers ;
        result += <cflags>-Wno-missing-prototypes ;
        result += <cflags>-Wno-newline-eof ;
        result += <cflags>-Wno-non-virtual-dtor ;
        result += <cflags>-Wno-overloaded-virtual ;
        result += <cflags>-Wno-receiver-is-weak ;
        result += <cflags>-Wno-selector ;
        result += <cflags>-Wno-shadow ;
        result += <cflags>-Wno-sign-conversion ;
        result += <cflags>-Wno-strict-selector-match ;
        result += <cflags>-Wno-unknown-pragmas ;
        result += <cflags>-Wno-unused-label ;
        result += <cflags>-Wno-unused-local-typedef ;
        result += <cflags>-Wno-unused-parameter ;
        result += <cflags>-Wparentheses ;
        result += <cflags>-Wprotocol ;
        result += <cflags>-Wswitch ;
        result += <cflags>-Wundeclared-selector ;
        result += <cflags>-Wunreachable-code ;
        result += <cflags>-Wunused-function ;
        result += <cflags>-Wunused-value ;
        result += <cflags>-Wunused-variable ;
        return $(result) ;
    }
}

alias project_defaults : : : :
    <conditional>@clang-defaults

    <toolset>gcc:<cflags>-Wno-error=format
    <toolset>gcc:<cflags>-Wno-error=unused-variable
    <toolset>gcc:<cflags>-Wno-unused-variable
    <toolset>gcc:<cflags>-Wno-format
    <toolset>gcc:<cflags>-Wno-unused-local-typedefs
    <toolset>gcc:<cflags>-Wno-sign-compare

    <define>STATICLIB
    <cflags>-U__STRICT_ANSI__
;


alias objc : : : :
    <target-os>darwin:<cxxflags>"-x objective-c++"
    <target-os>iphone:<cxxflags>"-x objective-c++"
    <target-os>appletv:<cxxflags>"-x objective-c++"
    <target-os>darwin:<cflags>-fobjc-arc
    <target-os>iphone:<cflags>-fobjc-arc
    <target-os>appletv:<cflags>-fobjc-arc
;


alias scraps_headers :
    $(NEEDS_PATH)//openssl
    $(NEEDS_PATH)//curl
    $(NEEDS_PATH)//libsodium
    $(NEEDS_PATH)//gsl
    $(NEEDS_PATH)//boost
    project_defaults
:
    <include>include
: :
    <include>include
;

rule use-scraps-pch ( properties * ) {
    if <target-os>iphone in $(properties) || <target-os>appletv in $(properties) || <target-os>linux in $(properties) {
        return <build>no ;
    }
}

cpp-pch pch :
    scraps_headers
    src/pch.h
:
    <conditional>@use-scraps-pch
    <cxxflags>"-std=c++14"
;

lib libGLESv2    : : <name>GLESv2 <link>shared ;
alias mnmlstc : $(NEEDS_PATH)//mnmlstc ;

lib scraps :
    pch
    objc
    [ glob-tree-ex src : *.cpp ]
    include/cppformat/format.cc
    include/json11/json11.cpp
    scraps_headers
    mnmlstc
:
    <link>static
    <cxxflags>"-std=c++14"
    <target-os>android:<source>libGLESv2
: :
    <target-os>darwin:<framework>Foundation
    <target-os>darwin:<framework>CoreServices
    <target-os>darwin:<framework>CoreFoundation
    <target-os>darwin:<framework>Security

    <target-os>darwin:<framework>OpenGL
    <target-os>iphone:<framework>OpenGLES
    <target-os>appletv:<framework>OpenGLES

    <target-os>linux:<linkflags>"-lpthread -ldl"

    <linkflags>"-lcurl -lz -lssl -lcrypto -lsodium -lboost_system -lboost_filesystem -lboost_program_options"
    <cxxflags>"-std=c++14"
;

import package ;
package.install install : <install-source-root>include : : scraps : [ glob-tree-ex include : *.h ] ;
explicit install ;
