{% set common_cxx_flags = env['CXXFLAGS'] ~ ' -fvisibility=hidden' %}

{% if platform == 'ios' %}
{% set xcrun_platform = 'iphoneos' %}
{% elif platform == 'iossimulator' %}
{% set xcrun_platform = 'iphonesimulator' %}
{% elif platform == 'tvos' %}
{% set xcrun_platform = 'appletvos' %}
{% elif platform == 'tvossimulator' %}
{% set xcrun_platform = 'appletvsimulator' %}
{% endif %}
libraries:
    asio:
        repository: git@github.com:chriskohlhoff/asio.git
        commit: asio-1-10-6
        project:
            header-directory: asio/include
            post-build: xxd -i asio/LICENSE_1_0.txt {build_directory}/include/asio/license.c
    boost-build:
        download: https://github.com/boostorg/build/archive/2016.03.tar.gz
        checksum: 0e6936337c25fc87d2aff8ea6c63019e9c1e319a
        project:
            build-steps:
                - ./bootstrap.sh
                - ./b2 install --prefix={build_directory}
    libsodium:
        download: https://github.com/jedisct1/libsodium/releases/download/1.0.10/libsodium-1.0.10.tar.gz
        checksum: f34f78330cf1a4f69acce5f3fc2ada2d4098c7f4
        project:
            configure-args:
                - --enable-minimal
                - --disable-soname-versions
                - --disable-shared
            {% if (platform == 'ios' or platform == 'tvos') and 'arm' in architecture %}
                - --host=arm-apple-darwin10
            {% endif %}
            {% if platform == 'android' and architecture == 'armv7' %}
            environment:
                CFLAGS: "{current} -mfloat-abi=softfp -mfpu=vfpv3-d16 -mthumb -marm"
            {% endif %}
            post-build: xxd -i LICENSE {build_directory}/include/sodium/license.c
    openssl:
        repository: git@github.com:openssl/openssl.git
        commit: OpenSSL_1_0_1t
        project:
            build-steps:
                {% set openssl_flags = ' --prefix={build_directory} no-weak-ssl-ciphers' %}
                {% if platform in ['tvos', 'tvossimulator'] %}
                {% set openssl_flags = openssl_flags ~ ' -DHAVE_FORK=0' %}
                {% endif %}
                {% if platform in ['iossimulator', 'tvossimulator'] %}
                {% set openssl_flags = openssl_flags ~ ' -D__STRICT_ANSI__=1 no-asm' %}
                {% endif %}

                {% if platform == 'osx' %}
                - sh ./Configure darwin64-x86_64-cc {{openssl_flags}}
                {% elif platform == 'android' %}
                - sh ./Configure android {{openssl_flags}}
                {% elif platform in ['ios', 'iossimulator', 'tvos', 'tvossimulator'] %}
                {% set cross_args = 'CROSS_TOP=$(xcrun --sdk ' ~ xcrun_platform ~ ' --show-sdk-platform-path)/Developer CROSS_SDK=$(basename $(xcrun --sdk ' ~ xcrun_platform ~ ' --show-sdk-path))' %}
                - sh ./Configure iphoneos-cross {{openssl_flags}}
                {% elif platform == host_platform %}
                - sh ./config {{openssl_flags}}
                {% endif %}
                - make depend
                - sh -c 'make build_libs {{cross_args}} -j{{ parameters.concurrency if parameters.concurrency else '' }}'
                - sh -c 'make install_sw DIRS="crypto ssl engines"'
            post-build: xxd -i LICENSE {build_directory}/include/openssl/license.c
    curl:
        download: http://curl.haxx.se/download/curl-7.44.0.tar.gz
        checksum: 4dc36d2f3310585cc1f9211b5f5c71327c86fb61
        dependencies: openssl
        project:
            environment:
                # dl is required to link statically to openssl
                LIBS: -ldl
            configure-args:
                - --disable-ldap
                - --without-libidn
                - --without-librtmp
                - --disable-ntlm-wb
                - --disable-shared
                - --with-ssl={{ build_directory('openssl') }}
                - --enable-optimize
                - --disable-dependency-tracking
                - --disable-imap
                - --disable-smtp
                - --disable-pop3
                - --disable-telnet
                - --disable-rtsp
                - --disable-ldap
                - --disable-ldaps
                - --disable-proxy
                - --disable-smb
                - --disable-gopher
            post-build: xxd -i COPYING {build_directory}/include/curl/license.c
    gsl:
        repository: git@github.com:Microsoft/GSL.git
        commit: 0be53d99ef9b6ac0c7d6d995cb94c0dce14fe1f8
        project:
            header-directory: include
            post-build: xxd -i LICENSE {build_directory}/include/gsl_license.c
    mnmlstc:
        repository: git@github.com:bittorrent/mnmlstc-core.git
        commit: 477ad177db1bed75c5f251b1a1976787cc769c00
        project:
            header-directory: include
            post-build: xxd -i License.rst {build_directory}/include/core/license.c
    fmtlib:
        repository: git@github.com:fmtlib/fmt.git
        commit: 3.0.0
        project:
            build-steps:
                - mkdir -p {build_directory}/include/fmt
                - cp fmt/*.h {build_directory}/include/fmt
                - cp fmt/*.cc {build_directory}/include/fmt
                - $CXX -std=c++11 {{common_cxx_flags}} -c fmt/format.cc -I . -o fmt/format.o
                - ar -rv {build_directory}/lib/libfmt.a fmt/format.o
            post-build: xxd -i LICENSE.rst {build_directory}/include/fmt/license.c
    googletest:
        repository: git@github.com:google/googletest.git
        commit: 43359642a1c16ad3f4fc575c7edd0cb935810815
        project:
            build-steps:
                - cp -R googletest/include {build_directory}
                - $CXX -std=c++11 {{common_cxx_flags}} -c googletest/src/gtest-all.cc -isystem googletest/include -I googletest -o googletest/src/gtest-all.o
                - ar -rv {build_directory}/lib/libgtest.a googletest/src/gtest-all.o
    benchmark:
        repository: https://github.com/google/benchmark.git
        commit: 577baa0dbdc6ea6d916db0f12ed2dcc5cee19b99
        project:
            environment:
                CXXFLAGS: {{common_cxx_flags}}
            cmake-options:
                CMAKE_BUILD_TYPE: Release
    jshackle:
        repository: git@github.com:bittorrent/jshackle.git
        commit: fa34cb3f85d9358bb93ab747dbd7105e97fc4216
        project:
            header-directory: include
